services:
  crm-database:
    image: postgres:17
    container_name: crm-database
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  crm-api:
    build:
      context: .
      dockerfile: CrmApi/Dockerfile
    container_name: crm-api
    restart: always
    depends_on:
      crm-database:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Host=crm-database;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "${API_PORT}:80"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: